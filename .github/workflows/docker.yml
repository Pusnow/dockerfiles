name: Build Docker Images

on:
  push:
    branches:
      - master
  schedule:
    - cron: "0 0 * * 0"
  workflow_dispatch:


jobs:
  dev-build:
    uses: ./.github/workflows/docker-build.yml
    with:
      name: dev
      tag: latest
      arch: amd64
      path: dev
      crpath: ghcr.io/pusnow
    secrets: inherit
  dev:
    needs: dev-build
    uses: ./.github/workflows/docker-manifest.yml
    with:
      name: dev
      tag: latest
      archs: amd64
      crpath: ghcr.io/pusnow
    secrets: inherit
  debian-base-build:
    strategy:
      matrix:
        debian-tag: ["bookworm"]
        arch: ["amd64", "arm64"]
    uses: ./.github/workflows/docker-build.yml
    with:
      name: debian-base
      tag: ${{ matrix.debian-tag }}
      arch: ${{ matrix.arch }}
      path: debian-base
      crpath: ghcr.io/pusnow
      buildargs: --build-arg PS_DEBIAN_TAG=${{ matrix.debian-tag }}
    secrets: inherit
  debian-base:
    needs: debian-base-build
    strategy:
      matrix:
        debian-tag: ["bookworm"]
    uses: ./.github/workflows/docker-manifest.yml
    with:
      name: debian-base
      tag: ${{ matrix.debian-tag }}
      archs: amd64 arm64
      crpath: ghcr.io/pusnow
    secrets: inherit

  fedora-base-build:
    strategy:
      matrix:
        fedora-tag: ["39"]
        arch: ["amd64", "arm64"]
    uses: ./.github/workflows/docker-build.yml
    with:
      name: fedora-base
      tag: ${{ matrix.fedora-tag }}
      arch: ${{ matrix.arch }}
      path: fedora-base
      crpath: ghcr.io/pusnow
      buildargs: --build-arg PS_FEDORA_TAG=${{ matrix.fedora-tag }}
    secrets: inherit
  fedora-base:
    needs: fedora-base-build
    strategy:
      matrix:
        fedora-tag: ["39"]
    uses: ./.github/workflows/docker-manifest.yml
    with:
      name: fedora-base
      tag: ${{ matrix.fedora-tag }}
      archs: amd64 arm64
      crpath: ghcr.io/pusnow
    secrets: inherit

  debian-build:
    needs: debian-base
    strategy:
      matrix:
        image:
          - name: borg
            packages: borgbackup
            cmd: borg
          - name: dnsmasq
            packages: dnsmasq python3 curl
            cmd: /usr/sbin/dnsmasq
          - name: hostapd
            packages: hostapd iw wireless-tools
            cmd: /usr/sbin/hostapd
          - name: vsftpd
            packages: vsftpd
            cmd: /usr/sbin/vsftpd
          - name: isync
            packages: isync
            cmd: /usr/bin/mbsync
          - name: tinyproxy
            packages: tinyproxy
            cmd: /usr/bin/tinyproxy -d
          - name: mptcpd
            packages: mptcpd mptcpd-plugins
            cmd: /usr/bin/mptcpd
          - name: samba
            packages: samba
            cmd: /usr/sbin/smbd --foreground --no-process-group
          - name: netsetup
            packages: curl iptables jq
            cmd: curl
          - name: igmpproxy
            packages: igmpproxy
            cmd: /usr/sbin/igmpproxy
        debian-tag: ["bookworm"]
        arch: ["amd64", "arm64"]
    uses: ./.github/workflows/docker-build.yml
    with:
      name: ${{ matrix.image.name }}
      path: debian-img
      tag: ${{ matrix.debian-tag }}
      arch: ${{ matrix.arch }}
      crpath: ghcr.io/pusnow
      buildargs: --build-arg PS_DEBIAN_TAG=${{ matrix.debian-tag }} --build-arg DEBIAN_PKGS="${{ matrix.image.packages }}" --build-arg DEBIAN_CMD="${{ matrix.image.cmd }}"
    secrets: inherit

  debian:
    needs: debian-build
    strategy:
      matrix:
        debian-tag: ["bookworm"]
        image:
         - borg
         - dnsmasq
         - hostapd
         - vsftpd
         - isync
         - tinyproxy
         - mptcpd
         - samba
         - netsetup
         - igmpproxy
    uses: ./.github/workflows/docker-manifest.yml
    with:
      name: ${{ matrix.image }}
      tag: ${{ matrix.debian-tag }}
      archs: amd64 arm64
      crpath: ghcr.io/pusnow
    secrets: inherit

  debian-custom-build:
    needs: debian-base
    strategy:
      matrix:
        image:
          - name: ssh
          - name: wg
          - name: xfce4
        arch: ["amd64", "arm64"]
    uses: ./.github/workflows/docker-build.yml
    with:
      name: ${{ matrix.image.name }}
      path: ${{ matrix.image.name }}
      arch: ${{ matrix.arch }}
      crpath: ghcr.io/pusnow
    secrets: inherit

  debian-custom:
    needs: debian-custom-build
    strategy:
      matrix:
        image:
         - ssh
         - wg
         - xfce4
    uses: ./.github/workflows/docker-manifest.yml
    with:
      name: ${{ matrix.image }}
      archs: amd64 arm64
      crpath: ghcr.io/pusnow
    secrets: inherit

  fedora-custom-build:
    needs: fedora-base
    strategy:
      matrix:
        image:
          - name: dev
        arch: ["amd64", "arm64"]

    uses: ./.github/workflows/docker-build.yml
    with:
      name: ${{ matrix.image.name }}
      path: ${{ matrix.image.name }}
      arch: ${{ matrix.arch }}
      crpath: ghcr.io/pusnow
    secrets: inherit

  fedora-custom:
    needs: fedora-custom-build
    strategy:
      matrix:
        image:
         - dev
    uses: ./.github/workflows/docker-manifest.yml
    with:
      name: ${{ matrix.image }}
      archs: amd64 arm64
      crpath: ghcr.io/pusnow
    secrets: inherit


  debian-qemu:
    needs: debian-base
    uses: ./.github/workflows/docker-build.yml
    with:
      name: qemu
      path: qemu
      crpath: ghcr.io/pusnow
    secrets: inherit

  actions-runner:
    needs: debian-qemu
    uses: ./.github/workflows/docker-build.yml
    with:
      name: actions-runner
      path: actions-runner
      crpath: ghcr.io/pusnow
      maximize: false
    secrets: inherit

    
